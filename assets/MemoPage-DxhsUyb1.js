import{r,j as e}from"./index-Db6rAt0N.js";const t=r.memo(({value:n})=>{console.log("ExpensiveComponent renderizado");const o=(a=>{let s=0;for(let c=0;c<1e6;c++)s+=a;return s})(n);return e.jsx("div",{className:"p-4 bg-white rounded shadow",children:e.jsxs("p",{children:["Valor calculado: ",o]})})}),d=()=>{const[n,l]=r.useState(0),[o,a]=r.useState(0);return e.jsxs("div",{className:"space-y-6",children:[e.jsxs("div",{className:"prose",children:[e.jsx("h1",{children:"React.memo - MemoizaciÃ³n de Componentes"}),e.jsx("h2",{children:"Â¿QuÃ© es?"}),e.jsx("p",{children:"React.memo es una higher-order component que permite memorizar un componente, evitando re-renderizados innecesarios cuando las props no han cambiado."}),e.jsx("h2",{children:"Â¿CuÃ¡ndo usarlo?"}),e.jsxs("ul",{children:[e.jsx("li",{children:"Componentes que reciben las mismas props frecuentemente"}),e.jsx("li",{children:"Componentes con cÃ¡lculos costosos"}),e.jsx("li",{children:"Componentes que se re-renderizan frecuentemente debido a cambios en el padre"})]})]}),e.jsxs("div",{className:"bg-gray-100 p-6 rounded-lg",children:[e.jsx("h3",{className:"text-lg font-semibold mb-4",children:"Ejemplo PrÃ¡ctico"}),e.jsxs("div",{className:"space-y-4",children:[e.jsx(t,{value:n}),e.jsxs("div",{className:"space-x-4",children:[e.jsxs("button",{className:"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600",onClick:()=>l(s=>s+1),children:["Incrementar valor (",n,")"]}),e.jsxs("button",{className:"px-4 py-2 bg-gray-500 text-white rounded hover:bg-gray-600",onClick:()=>a(s=>s+1),children:["Actualizar estado no relacionado (",o,")"]})]}),e.jsx("div",{className:"bg-yellow-100 p-4 rounded",children:e.jsx("p",{className:"text-sm",children:"ðŸ‘‰ Observa la consola del navegador. El componente ExpensiveComponent solo se re-renderiza cuando cambias el contador, no cuando actualizas el estado no relacionado."})})]})]})]})};export{d as default};
